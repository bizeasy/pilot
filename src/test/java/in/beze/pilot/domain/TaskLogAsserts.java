package in.beze.pilot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TaskLogAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskLogAllPropertiesEquals(TaskLog expected, TaskLog actual) {
        assertTaskLogAutoGeneratedPropertiesEquals(expected, actual);
        assertTaskLogAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskLogAllUpdatablePropertiesEquals(TaskLog expected, TaskLog actual) {
        assertTaskLogUpdatableFieldsEquals(expected, actual);
        assertTaskLogUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskLogAutoGeneratedPropertiesEquals(TaskLog expected, TaskLog actual) {
        assertThat(expected)
            .as("Verify TaskLog auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskLogUpdatableFieldsEquals(TaskLog expected, TaskLog actual) {
        assertThat(expected)
            .as("Verify TaskLog relevant properties")
            .satisfies(e -> assertThat(e.getComments()).as("check comments").isEqualTo(actual.getComments()))
            .satisfies(e -> assertThat(e.getFromTime()).as("check fromTime").isEqualTo(actual.getFromTime()))
            .satisfies(e -> assertThat(e.getToTime()).as("check toTime").isEqualTo(actual.getToTime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskLogUpdatableRelationshipsEquals(TaskLog expected, TaskLog actual) {
        assertThat(expected)
            .as("Verify TaskLog relationships")
            .satisfies(e -> assertThat(e.getTask()).as("check task").isEqualTo(actual.getTask()));
    }
}
