package in.beze.pilot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProjectAttachmentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectAttachmentAllPropertiesEquals(ProjectAttachment expected, ProjectAttachment actual) {
        assertProjectAttachmentAutoGeneratedPropertiesEquals(expected, actual);
        assertProjectAttachmentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectAttachmentAllUpdatablePropertiesEquals(ProjectAttachment expected, ProjectAttachment actual) {
        assertProjectAttachmentUpdatableFieldsEquals(expected, actual);
        assertProjectAttachmentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectAttachmentAutoGeneratedPropertiesEquals(ProjectAttachment expected, ProjectAttachment actual) {
        assertThat(expected)
            .as("Verify ProjectAttachment auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectAttachmentUpdatableFieldsEquals(ProjectAttachment expected, ProjectAttachment actual) {
        // empty method

    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectAttachmentUpdatableRelationshipsEquals(ProjectAttachment expected, ProjectAttachment actual) {
        assertThat(expected)
            .as("Verify ProjectAttachment relationships")
            .satisfies(e -> assertThat(e.getFacility()).as("check facility").isEqualTo(actual.getFacility()))
            .satisfies(e -> assertThat(e.getAttachment()).as("check attachment").isEqualTo(actual.getAttachment()));
    }
}
