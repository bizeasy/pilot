package in.beze.pilot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TaskHistoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskHistoryAllPropertiesEquals(TaskHistory expected, TaskHistory actual) {
        assertTaskHistoryAutoGeneratedPropertiesEquals(expected, actual);
        assertTaskHistoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskHistoryAllUpdatablePropertiesEquals(TaskHistory expected, TaskHistory actual) {
        assertTaskHistoryUpdatableFieldsEquals(expected, actual);
        assertTaskHistoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskHistoryAutoGeneratedPropertiesEquals(TaskHistory expected, TaskHistory actual) {
        assertThat(expected)
            .as("Verify TaskHistory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskHistoryUpdatableFieldsEquals(TaskHistory expected, TaskHistory actual) {
        assertThat(expected)
            .as("Verify TaskHistory relevant properties")
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskHistoryUpdatableRelationshipsEquals(TaskHistory expected, TaskHistory actual) {
        assertThat(expected)
            .as("Verify TaskHistory relationships")
            .satisfies(e -> assertThat(e.getAssignedTo()).as("check assignedTo").isEqualTo(actual.getAssignedTo()))
            .satisfies(e -> assertThat(e.getSprint()).as("check sprint").isEqualTo(actual.getSprint()))
            .satisfies(e -> assertThat(e.getAssignedBy()).as("check assignedBy").isEqualTo(actual.getAssignedBy()));
    }
}
