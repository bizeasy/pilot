package in.beze.pilot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SprintAttachmentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSprintAttachmentAllPropertiesEquals(SprintAttachment expected, SprintAttachment actual) {
        assertSprintAttachmentAutoGeneratedPropertiesEquals(expected, actual);
        assertSprintAttachmentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSprintAttachmentAllUpdatablePropertiesEquals(SprintAttachment expected, SprintAttachment actual) {
        assertSprintAttachmentUpdatableFieldsEquals(expected, actual);
        assertSprintAttachmentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSprintAttachmentAutoGeneratedPropertiesEquals(SprintAttachment expected, SprintAttachment actual) {
        assertThat(expected)
            .as("Verify SprintAttachment auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSprintAttachmentUpdatableFieldsEquals(SprintAttachment expected, SprintAttachment actual) {
        // empty method

    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSprintAttachmentUpdatableRelationshipsEquals(SprintAttachment expected, SprintAttachment actual) {
        assertThat(expected)
            .as("Verify SprintAttachment relationships")
            .satisfies(e -> assertThat(e.getSprint()).as("check sprint").isEqualTo(actual.getSprint()))
            .satisfies(e -> assertThat(e.getAttachment()).as("check attachment").isEqualTo(actual.getAttachment()));
    }
}
